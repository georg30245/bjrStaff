
Функция ПолучитьДвоичныеДанныеЗвука(НазваниеЗвука)  Экспорт
	Возврат ПолучитьОбщийМакет(НазваниеЗвука);
КонецФункции

Функция Сериализовать(пСтруктура) Экспорт 
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, пСтруктура);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

Функция ДеСериализовать(пТекст) Экспорт 
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(пТекст);
	
	Возврат ПрочитатьJSON(Чтение);
	
КонецФункции
 
Процедура ОбновитьСправочникМагазины(МассивДанных) Экспорт 
	
	Для Каждого ДанныеПоМагазину Из МассивДанных Цикл
		
		СсылкаМагазин				 = Справочники.Магазины.НайтиПоКоду(ДанныеПоМагазину.code);
		ОбъектМагазин				 = ?(ЗначениеЗаполнено(СсылкаМагазин), СсылкаМагазин.ПолучитьОбъект(), Справочники.Магазины.СоздатьЭлемент());
		ОбъектМагазин.Код			 = ДанныеПоМагазину.code;
		ОбъектМагазин.Наименование	 = ДанныеПоМагазину.name;
		ОбъектМагазин.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСправочникГруппаТоваров(МассивДанных) Экспорт 
	
	Для Каждого ДанныеПоГруппе Из МассивДанных Цикл
		
		СсылкаГруппа				 = Справочники.ГруппыТоваров.НайтиПоКоду(ДанныеПоГруппе.code);
		ОбъектГруппа				 = ?(ЗначениеЗаполнено(СсылкаГруппа), СсылкаГруппа.ПолучитьОбъект(), Справочники.ГруппыТоваров.СоздатьЭлемент());
		ОбъектГруппа.Код			 = ДанныеПоГруппе.code;
		ОбъектГруппа.Наименование	 = ДанныеПоГруппе.name;
		ОбъектГруппа.Родитель 		 = Справочники.ГруппыТоваров.НайтиПоКоду(ДанныеПоГруппе.parentCode);
		ОбъектГруппа.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекущийМагазин() Экспорт
	
	Возврат Справочники.Магазины.НайтиПоКоду(ДеСериализовать(Константы.ГлобальныеНастройки.Получить()).Магазин);
	
КонецФункции

Функция ПолучитьСтроковоеПредставлениеМассива(Массив) Экспорт
	
	Результат = "";
	
	Для Каждого Элемент Из Массив Цикл
		Результат = Результат + ?(Результат = "", "", Символы.ПС) + Строка(Элемент);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьМассивИзСтрокиПоРазделителю(Знач пСтрока, Разделитель) Экспорт 
	
	Массив = новый Массив;
	
	Индекс = СтрНайти(пСтрока, Разделитель);
	Пока Индекс > 0 Цикл
	    Массив.Добавить(Сред(пСтрока, 1, индекс-1));
		пСтрока = Сред(пСтрока, Индекс+1, СтрДлина(пСтрока));
		Индекс = СтрНайти(пСтрока, Разделитель);
	КонецЦикла;
	
	Если пСтрока <> "" Тогда
		Массив.Добавить(пСтрока);
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

Функция СформироватьТекстовыеДанныеОУценке(ШК) Экспорт
	
	ДанныеПоУценке = РаспарситьШтрихкодУценки(ШК);
	
	Если ДанныеПоУценке.ТипУценки = "" Тогда
		Результат = "";
	ИначеЕсли ДанныеПоУценке.ТипУценки = "Брак" Тогда
		Результат = "Уценка: Брак " + ДанныеПоУценке.Скидка + "%"; 
	ИначеЕсли ДанныеПоУценке.ТипУценки = "СрокГодности" Тогда
		Результат = "Уценка: Срок годности до " + Формат(ДанныеПоУценке.СрокГодности, "ДФ=dd.MM.yy");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ШтрихкодУценки(ШК) Экспорт
	
	Если Сред(ШК, 1, 1) = "!" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция НормироватьШтрихкод(ШК) Экспорт 
	
	ШК = СтрЗаменить(ШК, " ", "");
	ШК = СтрЗаменить(ШК, Символы.ВК, "");
	ШК = СтрЗаменить(ШК, Символы.ПС, "");
	ШК = СтрЗаменить(ШК, Символы.Таб, "");
	
	Если Лев(ШК, 1) = Символ(29) ТОгда
		ШК = Прав(ШК, СтрДлина(ШК)-1);
	КонецЕсли;
	
	Если Прав(ШК, 1) = Символ(29) ТОгда
		ШК = Лев(ШК, СтрДлина(ШК)-1);
	КонецЕсли;
	
	Возврат ШК;
	
КонецФункции

Функция ПолучитьТекстОшибки(Ошибка, ДопПараметры = Неопределено) Экспорт 
	
	СооветствиеОшибок = Новый Соответствие;
	СооветствиеОшибок.Вставить("НекорректныйШтрихкод", "Введён некорректный штрихкод");
	СооветствиеОшибок.Вставить("НеопределённыйТовар", "" + ДопПараметры.ШК + Символы.ПС + "Не удалось найти товар по указанному штрихкоду");
	СооветствиеОшибок.Вставить("НеВведенаМаркировка", "Не введена маркировка");
	СооветствиеОшибок.Вставить("НеопределённыйКодМаркировки", "Не найден код маркировки");
	СооветствиеОшибок.Вставить("ШтрихкодНеВДокументе", "Данный штрихкод не пробит в документ");
	СооветствиеОшибок.Вставить("МаркировкаУжеПрисутствует", "Данная маркировка уже пробита в документ");
	СооветствиеОшибок.Вставить("МаркировкаЕщёНеВведена", "Данная маркировка отсутствует в документе");
	СооветствиеОшибок.Вставить("ЗапрещеноУдалениеСтроки", "В данном виде сборки запрещено удаление строк");
	СооветствиеОшибок.Вставить("ЧужойКодМаркировки", "Данный код маркировки принадлежит другому товару");
	
	Возврат СооветствиеОшибок.Получить(Ошибка);
	
КонецФункции

Функция ЭтоСпецШтрихкод(ШК) Экспорт
	
	Возврат ШтрихкодУценки(ШК);
	
КонецФункции

Процедура ОбновитьДанныеПоМагазину() Экспорт 
	Попытка
		Результат = api.ПолучитьМагазинПоТокену();
		
		Если НЕ Результат.Свойство("Ошибка") Тогда
			ГлобальныеНастройки	 = ОбщегоНазначения_Сервер.ДеСериализовать(Константы.ГлобальныеНастройки.Получить());
			
			тМаг = Справочники.Магазины.НайтиПоКоду(Результат.code);
			
			Если ЗначениеЗаполнено(тМаг) Тогда
				обМаг = тМаг.ПолучитьОбъект();
			Иначе
				обМаг = Справочники.Магазины.СоздатьЭлемент();
			КонецЕсли;
			
			обМаг.Код = Результат.code;
			обМаг.Наименование = Результат.name;
			обМаг.Записать();
			
			Магазин = обМаг.Ссылка;
			
			ГлобальныеНастройки.Магазин = Результат.code;
			
			Константы.ГлобальныеНастройки.Установить(ОбщегоНазначения_Сервер.Сериализовать(ГлобальныеНастройки));
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция РаспарситьШтрихкодУценки(ШК) Экспорт 
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СрокГодности", Дата("00010101000000"));
	СтруктураВозврата.Вставить("Скидка", 0);
	СтруктураВозврата.Вставить("ТипУценки", "");
	
	Если не ШтрихкодУценки(ШК) Тогда Возврат СтруктураВозврата; КонецЕсли;
	
	ПервыйДефис = Найти(ШК, "-");
	СтрокаИнформации = Сред(ШК, ПервыйДефис + 1, СтрДлина(ШК) - ПервыйДефис);
	
	ВторойДефис = Найти(СтрокаИнформации, "-");
	
	Если ВторойДефис = 0 ТОгда //брак
		СтруктураВозврата.ТипУценки = "Брак";
		СтруктураВозврата.Скидка = Число(СтрокаИнформации);
	Иначе
		СтруктураВозврата.ТипУценки = "СрокГодности";
		СтруктураВозврата.Скидка = Число(Сред(СтрокаИнформации, 1, ВторойДефис-1));
		СтруктураВозврата.СрокГодности = Дата("20100101000000") +  Число(Сред(СтрокаИнформации, ВторойДефис + 1, СтрДлина(СтрокаИнформации) - ВторойДефис))*24*3600;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции