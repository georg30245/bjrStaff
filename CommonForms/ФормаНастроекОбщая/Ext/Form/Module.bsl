
&НаСервере
Процедура ЗаписатьПараметрыСканера()
	Константы.ПараметрыСканераШтрихкодовAndroid.Установить(ОбщегоНазначения_Сервер.Сериализовать(
	Новый Структура("ActionName,ExtraData",
					 ActionName,ExtraData)));
КонецПроцедуры

&НаСервере
Процедура ЗаписатьГлобальныеНастройки()
	Константы.ГлобальныеНастройки.Установить(ОбщегоНазначения_Сервер.Сериализовать(
	Новый Структура("Сервер, ДополнительныйСервер, Порт, Ресурс, СерверКартинок, РесурсКартинок, Токен, СпособОбмена, КаталогВыгрузки, Магазин",
					 Сервер, ДополнительныйСервер, Порт, Ресурс, СерверКартинок, РесурсКартинок, Токен, СпособОбмена, КаталогВыгрузки, Магазин.Код)));
КонецПроцедуры
				 
&НаКлиенте
Процедура ActionNameПриИзменении(Элемент)
	ЗаписатьПараметрыСканера();
КонецПроцедуры

&НаКлиенте
Процедура ExtraDataПриИзменении(Элемент)
	ЗаписатьПараметрыСканера();
КонецПроцедуры

&НаКлиенте
Процедура СерверПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ПортПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура РесурсПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныйСерверПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	Попытка 
		ПараметрыСканера = ОбщегоНазначения_Сервер.ДеСериализовать(Константы.ПараметрыСканераШтрихкодовAndroid.Получить());
		ActionName		 = ПараметрыСканера.ActionName;
		ExtraData		 = ПараметрыСканера.ExtraData;
	Исключение
	КонецПопытки;
	
	Попытка 
		ГлобальныеНастройки	 = ОбщегоНазначения_Сервер.ДеСериализовать(Константы.ГлобальныеНастройки.Получить());
		Сервер				 = ГлобальныеНастройки.Сервер;
		Порт				 = ГлобальныеНастройки.Порт;
		Ресурс				 = ГлобальныеНастройки.Ресурс;
		Магазин				 = Справочники.Магазины.НайтиПоКоду(ГлобальныеНастройки.Магазин);
		ДополнительныйСервер = ГлобальныеНастройки.ДополнительныйСервер;
		Токен				 = ГлобальныеНастройки.Токен;
		СерверКартинок 		 = ГлобальныеНастройки.СерверКартинок;
		РесурсКартинок 		 = ГлобальныеНастройки.РесурсКартинок;
		КаталогВыгрузки 	 = ГлобальныеНастройки.КаталогВыгрузки;
		СпособОбмена	 	 = ГлобальныеНастройки.СпособОбмена;
	Исключение	
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНастройки(Команда)
	ЗаписатьГлобальныеНастройки();
	Результат = api.ПолучитьМагазинПоТокену();
	
	Если Результат.Свойство("Ошибка") Тогда
		ПоказатьПредупреждение(,Результат.Ошибка);
	Иначе
		ОбработатьДанныеПоМагазину(Результат);
		ЗаписатьГлобальныеНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура  ОбработатьДанныеПоМагазину(пСтруктураМагазина)
	
	тМаг = Справочники.Магазины.НайтиПоКоду(пСтруктураМагазина.code);
	
	Если ЗначениеЗаполнено(тМаг) Тогда
		обМаг = тМаг.ПолучитьОбъект();
	Иначе
		обМаг = Справочники.Магазины.СоздатьЭлемент();
	КонецЕсли;
	
	обМаг.Код = пСтруктураМагазина.code;
	обМаг.Наименование = пСтруктураМагазина.name;
	обМаг.Записать();
	
	Магазин = обМаг.Ссылка;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоПодключениюПоУмолчаниюНаСервере()
	Сервер = "194.67.43.22";
	Порт = 53847;
	Ресурс = "/bjr_retailServices/hs/usersRequest/sendRequest/sendRequestGet";
	ДополнительныйСервер = "95.154.77.227";
	
	СерверКартинок = "api.bonjour-dv.ru/";
	РесурсКартинок = "/public_v1/images/ШК.jpg";
	
	СпособОбмена	 = "api";
	КаталогВыгрузки	 = "";
	
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеПоПодключениюПоУмолчанию(Команда)
	ЗаполнитьДанныеПоПодключениюПоУмолчаниюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СерверКартинокПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура РесурсКартинокПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ЛОЖЬ;
    
    Режим = РежимДиалогаВыбораФайла.ВыборКаталога; 
    ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
    ДиалогОткрытия.Заголовок = "Выберите каталог обмена"; 
        
    Параметр = "";
    Оповещение = Новый ОписаниеОповещения("ВыборКаталога_Завершение", ЭтотОбъект, Параметр );
    ДиалогОткрытия.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталога_Завершение(Результат, Параметр) Экспорт
    Если Результат = Неопределено Тогда
         Сообщить("Каталог не выбран");
         Возврат;
     КонецЕсли;
    КаталогВыгрузки = Результат[0];
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура СпособОбменаПриИзменении(Элемент)
	ЗаписатьГлобальныеНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ТестСканнера(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаТестСканера");
КонецПроцедуры

&НаКлиенте
Процедура НастройкиСборки(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаНастройкиСборки");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыСканера(Команда)
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("АТОЛ", "АТОЛ");
	СписокВыбора.Добавить("Honeywell", "Honeywell");
	
	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ОбработкаВыбораНастроекСканера", ЭтаФорма), СписокВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораНастроекСканера(Результат, ДопПараметры) Экспорт 
	
	Если Результат.Значение = "АТОЛ" Тогда
		ActionName = "com.xcheng.scanner.action.BARCODE_DECODING_BROADCAST";
		ExtraData  = "EXTRA_BARCODE_DECODING_DATA";
	ИначеЕсли Результат.Значение = "Honeywell" Тогда
		ActionName = "com.honeywell.ezservice.uniqueaction";
		ExtraData  = "data";
	КонецЕсли;
	
	ЗаписатьПараметрыСканера();
	
КонецПроцедуры
